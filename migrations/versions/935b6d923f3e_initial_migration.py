"""initial migration

Revision ID: 935b6d923f3e
Revises: 
Create Date: 2024-11-07 23:23:04.707888

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '935b6d923f3e'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('plans',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.Enum('freemium', 'premium', 'pro_rated', name='planenum'), nullable=True),
    sa.Column('price', sa.DECIMAL(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('password', sa.String(), nullable=True),
    sa.Column('role', sa.Enum('admin', 'job_seeker', 'employer', name='roleenum'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('employers',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('location', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('mission', sa.String(), nullable=True),
    sa.Column('vision', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_employers_user_id_users')),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_table('jobseekers',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('first_name', sa.String(), nullable=True),
    sa.Column('last_name', sa.String(), nullable=True),
    sa.Column('location', sa.String(), nullable=True),
    sa.Column('phone', sa.String(), nullable=True),
    sa.Column('dob', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_jobseekers_user_id_users')),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_table('educations',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('jobseeker_id', sa.UUID(), nullable=True),
    sa.Column('start_date', sa.DateTime(), nullable=True),
    sa.Column('end_date', sa.DateTime(), nullable=True),
    sa.Column('institution', sa.String(), nullable=True),
    sa.Column('qualification', sa.String(), nullable=True),
    sa.Column('course', sa.String(), nullable=True),
    sa.Column('level', sa.Enum('certificate', 'diploma', 'degree', 'masters', 'phd', name='educationlevelenum'), nullable=True),
    sa.ForeignKeyConstraint(['jobseeker_id'], ['jobseekers.id'], name=op.f('fk_educations_jobseeker_id_jobseekers')),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('experiences',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('jobseeker_id', sa.UUID(), nullable=True),
    sa.Column('start_date', sa.DateTime(), nullable=True),
    sa.Column('end_date', sa.DateTime(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('employer', sa.String(), nullable=True),
    sa.Column('job_title', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['jobseeker_id'], ['jobseekers.id'], name=op.f('fk_experiences_jobseeker_id_jobseekers')),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('jobs',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('employer_id', sa.UUID(), nullable=True),
    sa.Column('industry', sa.Enum('telcos', 'software', name='industryenum'), nullable=True),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('level', sa.Enum('entry_level', 'mid_level', 'senior_level', name='joblevelenum'), nullable=True),
    sa.Column('job_type', sa.Enum('freelance', 'fulltime', 'parttime', 'internship', name='jobtypeenum'), nullable=True),
    sa.Column('date_posted', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['employer_id'], ['employers.id'], name=op.f('fk_jobs_employer_id_employers')),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('payments',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('employer_id', sa.UUID(), nullable=True),
    sa.Column('plan_id', sa.UUID(), nullable=True),
    sa.Column('payment_type', sa.Enum('mpesa', 'bank', name='paymenttypeenum'), nullable=True),
    sa.ForeignKeyConstraint(['employer_id'], ['employers.id'], name=op.f('fk_payments_employer_id_employers')),
    sa.ForeignKeyConstraint(['plan_id'], ['plans.id'], name=op.f('fk_payments_plan_id_plans')),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('applications',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('jobseeker_id', sa.UUID(), nullable=True),
    sa.Column('job_id', sa.UUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('status', sa.Enum('pending', 'approved', 'rejected', name='applicationstatusenum'), nullable=True),
    sa.ForeignKeyConstraint(['job_id'], ['jobs.id'], name=op.f('fk_applications_job_id_jobs')),
    sa.ForeignKeyConstraint(['jobseeker_id'], ['jobseekers.id'], name=op.f('fk_applications_jobseeker_id_jobseekers')),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('job_requirements',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('job_id', sa.UUID(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['job_id'], ['jobs.id'], name=op.f('fk_job_requirements_job_id_jobs')),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('job_responsibilities',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('job_id', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['job_id'], ['jobs.id'], name=op.f('fk_job_responsibilities_job_id_jobs')),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('job_responsibilities')
    op.drop_table('job_requirements')
    op.drop_table('applications')
    op.drop_table('payments')
    op.drop_table('jobs')
    op.drop_table('experiences')
    op.drop_table('educations')
    op.drop_table('jobseekers')
    op.drop_table('employers')
    op.drop_table('users')
    op.drop_table('plans')
    # ### end Alembic commands ###

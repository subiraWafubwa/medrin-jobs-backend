"""initial migration

Revision ID: e005102f1300
Revises: 
Create Date: 2024-11-06 12:48:11.473204

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'e005102f1300'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('company',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('location', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('mission', sa.String(), nullable=True),
    sa.Column('vision', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('industry',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.Enum('telcos', 'software', name='industryenum'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('plans',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.Enum('freemium', 'premium', 'pro_rated', name='planenum'), nullable=True),
    sa.Column('price', sa.DECIMAL(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('roles',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.Enum('admin', 'job_seeker', 'employer', name='roleenum'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tags',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('password', sa.String(), nullable=True),
    sa.Column('code', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('education',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('start_date', sa.DateTime(), nullable=True),
    sa.Column('end_date', sa.DateTime(), nullable=True),
    sa.Column('institution', sa.String(), nullable=True),
    sa.Column('qualification', sa.String(), nullable=True),
    sa.Column('course', sa.String(), nullable=True),
    sa.Column('level', sa.Enum('certificate', 'diploma', 'degree', 'masters', 'phd', name='educationlevelenum'), nullable=True),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_education_user_id_user')),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('experience',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('start_date', sa.DateTime(), nullable=True),
    sa.Column('end_date', sa.DateTime(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('company', sa.String(), nullable=True),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('job_title', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_experience_user_id_user')),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('industry_company',
    sa.Column('company_id', sa.UUID(), nullable=False),
    sa.Column('industry', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['company.id'], name=op.f('fk_industry_company_company_id_company')),
    sa.ForeignKeyConstraint(['industry'], ['industry.id'], name=op.f('fk_industry_company_industry_industry')),
    sa.PrimaryKeyConstraint('company_id', 'industry')
    )
    op.create_table('job',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('level', sa.Enum('entry_level', 'mid_level', 'senior_level', name='joblevelenum'), nullable=True),
    sa.Column('job_type', sa.Enum('freelance', 'fulltime', 'parttime', 'internship', name='jobtypeenum'), nullable=True),
    sa.Column('date_posted', sa.DateTime(), nullable=True),
    sa.Column('company_id', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['company_id'], ['company.id'], name=op.f('fk_job_company_id_company')),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('payments',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('payment_type', sa.Enum('mpesa', 'bank', name='paymenttypeenum'), nullable=True),
    sa.Column('plan_id', sa.UUID(), nullable=True),
    sa.Column('company_id', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['company_id'], ['company.id'], name=op.f('fk_payments_company_id_company')),
    sa.ForeignKeyConstraint(['plan_id'], ['plans.id'], name=op.f('fk_payments_plan_id_plans')),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('profile',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('first_name', sa.String(), nullable=True),
    sa.Column('last_name', sa.String(), nullable=True),
    sa.Column('location', sa.String(), nullable=True),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('phone', sa.String(), nullable=True),
    sa.Column('dob', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_profile_user_id_user')),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_tags',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('tag_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['tag_id'], ['tags.id'], name=op.f('fk_user_tags_tag_id_tags')),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_user_tags_user_id_user')),
    sa.PrimaryKeyConstraint('user_id', 'tag_id')
    )
    op.create_table('applications',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('job_id', sa.UUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('status', sa.Enum('pending', 'approved', 'rejected', name='applicationstatusenum'), nullable=True),
    sa.ForeignKeyConstraint(['job_id'], ['job.id'], name=op.f('fk_applications_job_id_job')),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_applications_user_id_user')),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('job_responsibilities',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('job_id', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['job_id'], ['job.id'], name=op.f('fk_job_responsibilities_job_id_job')),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('job_tags',
    sa.Column('job_id', sa.UUID(), nullable=False),
    sa.Column('tag_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['job_id'], ['job.id'], name=op.f('fk_job_tags_job_id_job')),
    sa.ForeignKeyConstraint(['tag_id'], ['tags.id'], name=op.f('fk_job_tags_tag_id_tags')),
    sa.PrimaryKeyConstraint('job_id', 'tag_id')
    )
    op.create_table('requirements',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('job_id', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['job_id'], ['job.id'], name=op.f('fk_requirements_job_id_job')),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('requirements')
    op.drop_table('job_tags')
    op.drop_table('job_responsibilities')
    op.drop_table('applications')
    op.drop_table('user_tags')
    op.drop_table('profile')
    op.drop_table('payments')
    op.drop_table('job')
    op.drop_table('industry_company')
    op.drop_table('experience')
    op.drop_table('education')
    op.drop_table('user')
    op.drop_table('tags')
    op.drop_table('roles')
    op.drop_table('plans')
    op.drop_table('industry')
    op.drop_table('company')
    # ### end Alembic commands ###
